     1                                  bits 32
     2                                  
     3                                  global start
     4                                  
     5                                  extern exit, printf
     6                                  
     7                                  import printf msvcrt.dll
     8                                  
     9                                  import exit msvcrt.dll
    10                                  
    11                                  segment data use32 class=data
    12 00000000 770000000000000000-         sir dq 1110111b, 100000000b, 0ABCD0002E7FCh, 5
    12 00000009 01000000000000FCE7-
    12 00000012 0200CDAB0000050000-
    12 0000001B 0000000000         
    13                                      len equ ($ - sir) / 4
    14 00000020 00000000<rept>              rez times 10 dd 0
    15 00000048 257800                      format db '%x', 0
    16                                  
    17                                  segment code use32 class=code
    18                                  degree:
    19 00000000 8B442404                    mov eax, [esp + 4]
    20                                      
    21 00000004 B920000000                  mov ecx, 32
    22 00000009 BB00000000                  mov ebx, 0 ; bl tells us if we are in a 1-sequence, in bh we count the degree
    23 0000000E BA00000000                  mov edx, 0
    24 00000013 F8                          clc
    25 00000014 FC                          cld
    26                                      
    27                                      repeat_degree:
    28 00000015 88DA                            mov dl, bl
    29 00000017 D1E8                            shr eax, 1
    30 00000019 80D300                          adc bl, 0
    31                                          
    32 0000001C 38D3                            cmp bl, dl ; if result is 0, then the shifted bit was 0 and ebx will be 0
    33                                          
    34 0000001E 740B                            jz reset_ebx
    35                                          
    36 00000020 80C301                          add bl, 1
    37                                          
    38 00000023 B203                            mov dl, 3
    39                                          
    40 00000025 38D3                            cmp bl, dl
    41                                          
    42 00000027 7406                            jz add_degree
    43                                          
    44 00000029 EB09                            jmp repeat_degree_end
    45                                          
    46                                          reset_ebx:
    47 0000002B B300                                mov bl, 0
    48 0000002D EB05                                jmp repeat_degree_end
    49                                              
    50                                          add_degree:
    51 0000002F B300                                mov bl, 0
    52 00000031 80C701                              add bh, 1
    53                                      
    54                                          repeat_degree_end:
    55 00000034 E2DF                        loop repeat_degree
    56                                      
    57 00000036 B800000000                  mov eax, 0
    58 0000003B 88F0                        mov al, dh
    59                                      
    60 0000003D C3                          ret
    61                                  
    62                                      
    63                                  bai:
    64 0000003E 31C0                        xor eax, eax
    65                                  
    66                                  start:
    67 00000040 E8F9FFFFFF                 call bai
    68                                      
    69                                      
    70                                      
    71 00000045 6A00                        push dword 0
    72 00000047 FF15[00000000]              call [exit]
